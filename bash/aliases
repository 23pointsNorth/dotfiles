#!/usr/bin/env bash

alias reload='source ~/.config/bash/aliases'
alias ea='vim ~/.config/bash/aliases && reload'

function ht() {
  history | awk '{a[$2]++}END{for(i in a){print a[i] " " i}}' | sort -rn | head
}

function ef() {
  echo; for dir in ./*; do (echo "======== $dir ========"; echo; cd "$dir" && "$@"); echo; done
}

function realpath() {
  /usr/bin/python -c "import os,sys; print os.path.realpath(sys.argv[1])" "$0";
}

# Pathing
alias ..='cd ..;'
alias ...='.. ..'

if [ $SYSTEM_NAME = 'Darwin' ]; then
  function manpdf() { man -t "$@" | open -f -a Preview; }
  function osinfo() {
     x1="$(/usr/bin/sw_vers -productName)"
     x2="$(/usr/bin/sw_vers -productVersion)"
     x3="$(/usr/bin/sw_vers -buildVersion)"
     x4="$(/usr/bin/arch)"
     echo "${x1} - ${x2} - ${x3} - ${x4}"
  }
  function psenv() {
    ps eww -o command $1  | tr ' ' \\n
  }
  alias afk="/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend"
  alias pubkey='pubkey | pbcopy && echo "Keys copied to clipboard"'
  alias et="m"
  alias o='open .'
  alias b='open -a chrome'
  alias hidefile='/usr/bin/SetFile -a "V"'
  alias showfile='/usr/bin/SetFile -a "v"'
  alias ip='echo $(ipconfig getifaddr en0)'

  alias bgsaver='/System/Library/Frameworks/ScreenSaver.framework/Resources/ScreenSaverEngine.app/Contents/MacOS/ScreenSaverEngine -background &'
  alias bgsaver.stop='killall ScreenSaverEngine'

  alias selen='/usr/bin/java -jar /Applications/Sauce\ RC.app/Contents/Resources/controller/selenium-server.jar -timeout 30 -port 5666'

  alias ports.listen='sudo lsof -i -nP | grep "(LISTEN)"'

  alias ember.clean='rm -rf node_modules bower_components dist tmp'
  alias rm.dsstore='find . -name ".DS_Store" -type f -delete'
fi

if [ $SYSTEM_NAME = 'Linux' ]; then
  function psenv() {
    cat /proc/$1/environ | tr \\0 \\n
  }
fi

if command -v bat >/dev/null 2>&1; then
  alias yaml="bat -l yaml"
  alias jyaml="ruby -ryaml -rjson -e 'puts YAML.dump(JSON.parse(STDIN.read))' | yaml"
fi

alias rm.node_modules='find . -name "node_modules" -type d -prune -exec rm -rf "{}" +'
alias rm.dist='find . -name "dist" -type d -prune -exec rm -rf "{}" +'
alias rm.tmp='find . -name "tmp" -type d -prune -exec rm -rf "{}" +'
# Docker
alias d='docker'
alias dc='docker-compose'
alias dm='docker-machine'
alias docker.clean='docker rm $(docker ps --no-trunc -aq)'
alias d.clean='docker.clean'
alias docker.cleanimages='docker rmi $(docker images --filter dangling=true --quiet)'
alias d.ci='docker.cleanimages'
alias docker.cleanvolumes='docker volume rm $(docker volume ls -qf dangling=true)'
alias d.cv='docker.cleanvolumes'
alias docker.rm='docker rm $(docker ps -q -f status=exited)'
alias d.rm='docker.rm'
alias d.ps='docker ps --format "table {{.Names}}\t{{.ID}}\t{{.Ports}}"'
alias d.ps.labels='docker ps --format "table {{.Names}}\t{{.ID}}\t{{.Labels}}"'
alias dct='docker-compose -p gp-test -f docker-compose.yml -f docker-compose.test.yml'
# ssh
alias list-ssh='ps ax | grep "ssh" | grep -v grep'
alias list-t='ps ax | grep "ssh.*[0-9]:.*:[0-9]"'
alias path.list="echo \"\${PATH//:/\$'\n'}\""

# key bindings
alias keybinds='bind -P | grep not -v | cut -d" " -f1,6,7,8,9,10,11 | sed "s/[\"\\,.]//g" | column -t' # print all keybinds in terminal

# process status
alias tu='top -o cpu'
alias tm='top -o vsize'

# ls aliases
alias l='ls $LS_OPTIONS -lh'
alias la='ls $LS_OPTIONS -lAh'
alias ld='ls $LS_OPTIONS -lad */'
alias lf='ls $LS_OPTIONS -ap | grep -v /'

#tail
alias t='tail'
alias tf='tail -F'

# Ruby
alias irb='irb --readline -r irb/completion'
alias rii='ri -Tf ansi'

#imagemagick

alias imginfo="identify -format '-- %f -- \nType: %m\nSize: %b bytes\nResolution: %wpx x %hpx\nColors: %k'"
alias imgres="identify -format '%wx%h\n'"
