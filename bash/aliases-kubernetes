#!/usr/bin/env bash

# check for the kubectl command
command -v kubectl >/dev/null 2>&1 || return

# makes sure that k8s API is running
# lsof -i :6443 || return

alias k='kubectl'
source <(kubectl completion bash)
complete -F __start_kubectl k
command -v helm >/dev/null 2>&1 && . <(helm completion bash)
# add krew to path if present
# https://github.com/kubernetes-sigs/krew#installation
test -L "${KREW_ROOT:-$HOME/.krew}/bin/kubectl-krew" && export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"

alias kp='kubectl proxy'

alias ka='kubectl apply --recursive -f'
alias kx='kubectl exec -it'
alias kxn='kubectl exec -it --namespace'
alias klogs='kubectl logs -f'
alias klogsn='kubectl logs -f --namespace'
alias krm='kubectl delete'
alias krun='kubectl run --rm --restart=Never --image-pull-policy=IfNotPresent -i -t'

# get
alias kg='kubectl get'
alias kg.json='kg -o=json'
alias kg.wide='kg -o=wide'
alias kg.yaml='kg -o=yaml'
alias kg.an='kg --all-namespaces'
alias kg.an.json='kg.an -o=json'
alias kg.an.wide='kg.an -o=wide'
alias kg.an.yaml='kg.an -o=yaml'
alias kg.n='kg --namespace'
alias kg.n.json='kg.n -o=json'
alias kg.n.wide='kg.n -o=wide'
alias kg.n.yaml='kg.n -o=yaml'
alias kg.rf='kg --recursive -f'
alias kg.rf.json='kg.rf -o=json'
alias kg.rf.wide='kg.rf -o=wide'
alias kg.rf.yaml='kg.rf -o=yaml'

# describe
alias kd='kubectl describe'
alias kd.n='kd --namespace'
alias kd.an='kd --all-namespaces'
alias kd.cm='kd configmap'
alias kd.cm.an='kd.cm --all-namespaces'
alias kd.cm.n='kd.cm --namespace'
alias kd.dep='kd deployment'
alias kd.dep.an='kd.dep --all-namespaces'
alias kd.dep.n='kd.dep --namespace'
alias kd.f='kd --recursive -f'
alias kd.ing='kd ingress'
alias kd.ing.an='kd.ing --all-namespaces'
alias kd.ing.n='kd.ing --namespace'
alias kd.no='kd nodes'
alias kd.ns='kd namespaces'
alias kd.ns.an='kd namespaces --all-namespaces'
alias kd.po='kd pods'
alias kd.po.an='kd pods --all-namespaces'
alias kd.po.n='kd pods --namespace'
alias kd.sec='kd secret'
alias kd.sec.an='kd secret --all-namespaces'
alias kd.sec.n='kd secret --namespace'
alias kd.svc='kd service'
alias kd.svc.an='kd service --all-namespaces'
alias kd.svc.n='kd service --namespace'

# get configmap
alias kg.cm.json='kg configmap -o=json'
alias kg.cm='kg configmap'
alias kg.cm.an='kg configmap --all-namespaces'
alias kg.cm.an.json='kg configmap --all-namespaces -o=json'
alias kg.cm.an.wide='kg configmap --all-namespaces -o=wide'
alias kg.cm.an.yaml='kg configmap --all-namespaces -o=yaml'
alias kg.cm.n='kg configmap --namespace'
alias kg.cm.an.json='kg configmap -o=json --all-namespaces'
alias kg.cm.n.json='kg configmap -o=json --namespace'
alias kg.cm.an.wide='kg configmap -o=wide --all-namespaces'
alias kg.cm.n.wide='kg configmap -o=wide --namespace'
alias kg.cm.wide='kg configmap -o=wide'
alias kg.cm.yaml='kg configmap -o=yaml'
alias kg.cm.an.yaml='kg configmap -o=yaml --all-namespaces'
alias kg.cm.n.yaml='kg configmap -o=yaml --namespace'

# get deployment
alias kg.dep='kg deployment'
alias kg.dep.json='kg deployment -o=json'
alias kg.dep.an='kg deployment --all-namespaces'
alias kg.dep.an.json='kg deployment --all-namespaces -o=json'
alias kg.dep.an.wide='kg deployment --all-namespaces -o=wide'
alias kg.dep.an.yaml='kg deployment --all-namespaces -o=yaml'
alias kg.dep.n='kg deployment --namespace'
alias kg.dep.an.json='kg deployment -o=json --all-namespaces'
alias kg.dep.n.json='kg deployment -o=json --namespace'
alias kg.dep.wide='kg deployment -o=wide'
alias kg.dep.an.wide='kg deployment -o=wide --all-namespaces'
alias kg.dep.n.wide='kg deployment -o=wide --namespace'
alias kg.dep.yaml='kg deployment -o=yaml'
alias kg.dep.an.yaml='kg deployment -o=yaml --all-namespaces'
alias kg.dep.n.yaml='kg deployment -o=yaml --namespace'

# get ingress
alias kg.ing.json='kg ingress -o=json'
alias kg.ing='kg ingress'
alias kg.ing.an.json='kg ingress --all-namespaces -o=json'
alias kg.ing.an='kg ingress --all-namespaces'
alias kg.ing.an.wide='kg ingress --all-namespaces -o=wide'
alias kg.ing.an.yaml='kg ingress --all-namespaces -o=yaml'
alias kg.ing.n='kg ingress --namespace'
alias kg.ing.an.json='kg ingress -o=json --all-namespaces'
alias kg.ing.n.json='kg ingress -o=json --namespace'
alias kg.ing.wide='kg ingress -o=wide'
alias kg.ing.an.wide='kg ingress -o=wide --all-namespaces'
alias kg.ing.n.wide='kg ingress -o=wide --namespace'
alias kg.ing.yaml='kg ingress -o=yaml'
alias kg.ing.an.yaml='kg ingress -o=yaml --all-namespaces'
alias kg.ing.n.yaml='kg ingress -o=yaml --namespace'

# get nodes
alias kg.no='kg nodes'
alias kg.no.json='kg nodes -o=json'
alias kg.no.wide='kg nodes -o=wide'
alias kg.no.yaml='kg nodes -o=yaml'

# get namespaces
alias kg.ns='kg namespaces'
alias kg.ns.json='kg namespaces -o=json'
alias kg.ns.an.json='kg namespaces --all-namespaces -o=json'
alias kg.ns.an='kg namespaces --all-namespaces'
alias kg.ns.an.wide='kg namespaces --all-namespaces -o=wide'
alias kg.ns.an.yaml='kg namespaces --all-namespaces -o=yaml'
alias kg.ns.an.json='kg namespaces -o=json --all-namespaces'
alias kg.ns.wide='kg namespaces -o=wide'
alias kg.ns.an.wide='kg namespaces -o=wide --all-namespaces'
alias kg.ns.yaml='kg namespaces -o=yaml'

# get pods
alias kg.p='kg pods'
alias kg.p.json='kg pods -o=json'
alias kg.p.wide='kg pods -o=wide'
alias kg.p.yaml='kg pods -o=yaml'
alias kg.p.an='kg pods --all-namespaces'
alias kg.p.an.json='kg pods --all-namespaces -o=json'
alias kg.p.an.wide='kg pods --all-namespaces -o=wide'
alias kg.p.an.yaml='kg pods --all-namespaces -o=yaml'
alias kg.p.n='kg pods --namespace'
alias kg.p.n.json='kg pods -o=json --namespace'
alias kg.p.n.wide='kg pods -o=wide --namespace'
alias kg.p.n.yaml='kg pods -o=yaml --namespace'

# get secret
alias kg.sec='kg secret'
alias kg.sec.json='kg secret -o=json'
alias kg.sec.wide='kg secret -o=wide'
alias kg.sec.yaml='kg secret -o=yaml'
alias kg.sec.an='kg secret --all-namespaces'
alias kg.sec.an.json='kg secret --all-namespaces -o=json'
alias kg.sec.an.wide='kg secret --all-namespaces -o=wide'
alias kg.sec.an.yaml='kg secret --all-namespaces -o=yaml'
alias kg.sec.n='kg secret --namespace'
alias kg.sec.n.json='kg secret -o=json --namespace'
alias kg.sec.n.wide='kg secret -o=wide --namespace'
alias kg.sec.an.yaml='kg secret -o=yaml --all-namespaces'
alias kg.sec.n.yaml='kg secret -o=yaml --namespace'

# get service
alias kg.svc='kg service'
alias kg.svc.json='kg service -o=json'
alias kg.svc.wide='kg service -o=wide'
alias kg.svc.an='kg service --all-namespaces'
alias kg.svc.an.json='kg service --all-namespaces -o=json'
alias kg.svc.an.wide='kg service --all-namespaces -o=wide'
alias kg.svc.an.yaml='kg service --all-namespaces -o=yaml'
alias kg.svc.n='kg service --namespace'
alias kg.svc.n.json='kg service -o=json --namespace'
alias kg.svc.n.wide='kg service -o=wide --namespace'
alias kg.svc.yaml='kg service -o=yaml'
alias kg.svc.an.yaml='kg service -o=yaml --all-namespaces'
alias kg.svc.n.yaml='kg service -o=yaml --namespace'

alias krm.all='krm --all'
alias krm.cm='krm configmap'
alias krm.cm.all='krm configmap --all'
alias krm.cm.n='krm configmap --namespace'
alias krm.dep='krm deployment'
alias krm.dep.all='krm deployment --all'
alias krm.dep.n='krm deployment --namespace'
alias krm.f='krm --recursive -f'
alias krm.ing='krm ingress'
alias krm.ing.all='krm ingress --all'
alias krm.ing.n='krm ingress --namespace'
alias krm.n='krm --namespace'
alias krm.ns='krm namespaces'
alias krm.ns.all='krm namespaces --all'
alias krm.p='krm pods'
alias krm.p.all='krm pods --all'
alias krm.p.n='krm pods --namespace'
alias krm.sec='krm secret'
alias krm.sec.all='krm secret --all'
alias krm.sec.n='krm secret --namespace'
alias krm.svc='krm service'
alias krm.svc.all='krm service --all'
alias krm.svc.n='krm service --namespace'

# namespace=kube-system
alias ksys='kubectl --namespace=kube-system'
alias ksys.x='ksys exec -i -t'
alias ksys.a='ksys apply --recursive -f'
alias ksysd='ksys describe'
alias ksys.logs='ksys logs -f'
alias ksysrm='ksys delete'
alias ksys.run='ksys run --rm --restart=Never --image-pull-policy=IfNotPresent -i -t'
alias ksysg='ksys get'

ksys.admin-token() {
  ksysd secret $(ksysg secret | grep admin-user | awk '{print $1}')
}

alias ksysg.json='ksys get -o=json'
alias ksysg.wide='ksys get -o=wide'
alias ksysg.yaml='ksys get -o=yaml'

alias ksysg.cm='ksys get configmap'
alias ksysg.cm.json='ksys get configmap -o=json'
alias ksysg.cm.wide='ksys get configmap -o=wide'
alias ksysg.cm.yaml='ksys get configmap -o=yaml'

alias ksysg.dep='ksys get deployment'
alias ksysg.dep.json='ksys get deployment -o=json'
alias ksysg.dep.wide='ksys get deployment -o=wide'
alias ksysg.dep.yaml='ksys get deployment -o=yaml'

alias ksysg.ing='ksys get ingress'
alias ksysg.ing.json='ksys get ingress -o=json'
alias ksysg.ing.wide='ksys get ingress -o=wide'
alias ksysg.ing.yaml='ksys get ingress -o=yaml'

alias ksysg.p='ksys get pods'
alias ksysg.p.json='ksys get pods -o=json'
alias ksysg.p.wide='ksys get pods -o=wide'
alias ksysg.p.yaml='ksys get pods -o=yaml'

alias ksysg.sec='ksys get secret'
alias ksysg.sec.json='ksys get secret -o=json'
alias ksysg.sec.wide='ksys get secret -o=wide'
alias ksysg.sec.yaml='ksys get secret -o=yaml'

alias ksysg.svc='ksys get service'
alias ksysg.svc.json='ksys get service -o=json'
alias ksysg.svc.wide='ksys get service -o=wide'
alias ksysg.svc.yaml='ksys get service -o=yaml'

alias ksysd.cm='ksys describe configmap'
alias ksysd.dep='ksys describe deployment'
alias ksysd.ing='ksys describe ingress'
alias ksysd.p='ksys describe pods'
alias ksysd.sec='ksys describe secret'
alias ksysd.svc='ksys describe service'

alias ksysrm.all='ksys delete --all'
alias ksysrm.cm='ksys delete configmap'
alias ksysrm.cm.all='ksys delete configmap --all'
alias ksysrm.dep='ksys delete deployment'
alias ksysrm.dep.all='ksys delete deployment --all'
alias ksysrm.ing='ksys delete ingress'
alias ksysrm.ing.all='ksys delete ingress --all'
alias ksysrm.po='ksys delete pods'
alias ksysrm.po.all='ksys delete pods --all'
alias ksysrm.sec='ksys delete secret'
alias ksysrm.sec.all='ksys delete secret --all'
alias ksysrm.svc='ksys delete service'
alias ksysrm.svc.all='ksys delete service --all'
