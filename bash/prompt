if [ -z "$PS1" ]; then
   return
fi

##################################################
# Fancy PWD display function
##################################################
# The home directory (HOME) is replaced with a ~
# The last pwdmaxlen characters of the PWD are displayed
# Leading partial directory names are striped off
# /home/me/stuff          -> ~/stuff               if USER=me
# /usr/share/big_dir_name -> ../share/big_dir_name if pwdmaxlen=20
##################################################
bash_prompt_command() {
		RETURN=$?
    # How many characters of the $PWD should be kept
    local pwdmaxlen=45
    # Indicate that there has been dir truncation
    local trunc_symbol=".."
    local dir=${PWD##*/}
    pwdmaxlen=$(( ( pwdmaxlen < ${#dir} ) ? ${#dir} : pwdmaxlen ))
    NEW_PWD=${PWD/#$HOME/\~}
    local pwdoffset=$(( ${#NEW_PWD} - pwdmaxlen ))
    if [ ${pwdoffset} -gt "0" ]
    then
        NEW_PWD=${NEW_PWD:$pwdoffset:$pwdmaxlen}
        NEW_PWD=${trunc_symbol}/${NEW_PWD#*/}
    fi
		
		#EXIT_CODE='$(if [[ $RETURN = 0 ]]; then echo -ne ""; else echo -ne "\[$EMR\]$RETURN\[$NONE\] "; fi;)'
}


PROMPT_VENV=0 # python virtualenv name

venv() {
	[ $PROMPT_VENV -eq "1" ] && [ ${#VIRTUAL_ENV} -gt "0" ] && echo -e "${K} e[${R}$(basename ${VIRTUAL_ENV})${K}]"
}


PROMPT_VCS=1 # version control system name, branch and dirty status

enable.prompt.vcs(){
	PROMPT_VCS=1
}
disable.prompt.vcs(){
	PROMPT_VCS=0
}

vcs(){
	[ $PROMPT_VCS -eq "1" ] && echo -e $(vcprompt --format "${K} %n[${R}%b${EMG}%m${EMR}%u${EMY}%a${K}]")
}


PROMPT_RV=0 # ruby version

rv(){
	[ $PROMPT_RV -eq "1" ] && (local v=`ruby --version`; local arr=(${v// / }); echo -e "${K} ruby[${R}${arr[1]%p*}${K}]")
}

arrow(){
	local ARROW=$EMR
	[ "$RETURN" -eq "0" ] && ARROW=$EMG
	echo -e "${ARROW}â†’${NONE} "
}

bash_prompt() {
    case $TERM in
     xterm*|rxvt*)
         local TITLEBAR='\[\033]0;\u ${NEW_PWD}\007\]'
          ;;
     *)
         local TITLEBAR=""
          ;;
    esac
    
    local UC=$W                 	# user's color
    [ $UID -eq 0 ] && UC=$EMR			# root's color
    
	PS1="$TITLEBAR\n\
\[${UC}\]\u\
\$(vcs)\
\$(venv)\
\$(rv)\
 \[${EMB}\]\${NEW_PWD} \
\n\[${K}\]${RETURN}\
\$(arrow)"
}

PROMPT_COMMAND=bash_prompt_command
bash_prompt
