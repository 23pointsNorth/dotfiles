set nocompatible

" Allows plugins to live in their own folders under ~/.vim/bundles/*
" See http://vimcasts.org/episodes/synchronizing-plugins-with-git-submodules-and-pathogen/
call pathogen#runtime_append_all_bundles()
call pathogen#helptags()

colorscheme railscasts

" allow backspacing over everything in insert mode
set backspace=indent,eol,start
set nobackup
set nowritebackup
set history=50            " keep 50 lines of command line history
set showcmd               " display incomplete commands
set incsearch             " do incremental searching
set nowrap                " Switch wrap off for everything
set laststatus=2          " Always display the status line
set ignorecase            " case only matters with mixed case expressions
set smartcase
set number
set numberwidth=5
set title                 " enable automatic title setting for terminals
set titleold="Terminal"
set titlestring=%F

" activate a permanent ruler and disable Toolbar, and add line
" highlightng as well as numbers.
" And disable the sucking pydoc preview window for the omni completion
" also highlight current line and disable the blinking cursor.
set ruler                 " show the cursor position all the time
set guioptions-=T
set completeopt-=preview
set gcr=a:blinkon0
if has("gui_running")
  set cursorline
endif
set ttyfast

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if (&t_Co > 2 || has("gui_running")) && !exists("syntax_on")
  syntax on
  set hlsearch
endif

" \ is the leader character
let mapleader = ","
let maplocalleader="\\"

" Local config
if filereadable(".vimrc.local")
  source .vimrc.local
endif

" go with smartindent if there is no plugin indent file.
" but don't outdent hashes
set smartindent
inoremap # X#

" Gundo.vim settings        see http://sjl.bitbucket.org/gundo.vim/
nnoremap <Leader>u :GundoToggle<CR>
let g:gundo_preview_height = 20 
let g:gundo_width = 40
" let g:gundo_right = 1

" Kris' personal command mappings

" Bubble single lines
nmap <C-k> [e
nmap <C-j> ]e
" Bubble multiple lines
vmap <C-k> [egv
vmap <C-j> ]egv
" map 3-finger trackpad swipe gestures to buffer switches
nmap <SwipeLeft> :bN<CR>
nmap <SwipeRight> :bn<CR>
" split edit vimrc
nnoremap <leader>ev <C-w><C-s><C-l>:e $MYVIMRC<CR>
" NERDtree on <leader>t
nnoremap <leader>t :NERDTree<CR>
let NERDTreeIgnore=['\~$', '\.pyc$', '\.pyo$', '\.class$', 'pip-log\.txt$', '\.o$']

